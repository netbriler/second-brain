version: '3.7'


networks:
  app_net:
  wirehole_private_network:
    external: true

x-backend-service: &x-backend-service
  image: briler/second-brain:latest
  env_file:
    - .env
  restart: unless-stopped
  volumes:
    - /var/www/second-brain/static:/app/static
  labels:
    - "com.centurylinklabs.watchtower.enable=true"
    - "com.centurylinklabs.watchtower.auth.username=${WATCHTOWER_USER}"
    - "com.centurylinklabs.watchtower.auth.password=${WATCHTOWER_PASS}"
  depends_on:
    - postgres
    - redis
  networks:
    - app_net

services:

  migrate:
    <<: *x-backend-service
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py seeds &&
             python manage.py collectstatic --clear --noinput"
    restart: "no"

  backend:
    <<: *x-backend-service
    depends_on:
      - migrate
    networks:
      app_net:
      wirehole_private_network:
        ipv4_address: 10.2.0.27
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s
    command: ["gunicorn", "-c", "/app/app/gunicorn.py", "app.wsgi"]

  telegram-bot-webhook:
    <<: *x-backend-service
    networks:
      app_net:
      wirehole_private_network:
        ipv4_address: 10.2.0.28
    command: python manage.py run_telegram_webhook

  postgres:
    image: postgres:16
    restart: unless-stopped
    networks:
      - app_net
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  redis:
    image: redis
    restart: unless-stopped
    networks:
      - app_net
    volumes:
      - redis_data:/data

  celery:
    <<: *x-backend-service
    command: celery -A app worker --loglevel=debug --beat --scheduler=django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
  redis_data:
